function v(){}function q(e){return e()}function B(){return Object.create(null)}function y(e){e.forEach(q)}function I(e){return typeof e=="function"}function re(e,t){return e!=e?t==t:e!==t||e&&typeof e=="object"||typeof e=="function"}let g;function le(e,t){return e===t?!0:(g||(g=document.createElement("a")),g.href=t,e===g.href)}function H(e){return Object.keys(e).length===0}let b=!1;function M(){b=!0}function P(){b=!1}function z(e,t,n,i){for(;e<t;){const a=e+(t-e>>1);n(a)<=i?e=a+1:t=a}return e}function D(e){if(e.hydrate_init)return;e.hydrate_init=!0;let t=e.childNodes;if(e.nodeName==="HEAD"){const r=[];for(let l=0;l<t.length;l++){const o=t[l];o.claim_order!==void 0&&r.push(o)}t=r}const n=new Int32Array(t.length+1),i=new Int32Array(t.length);n[0]=-1;let a=0;for(let r=0;r<t.length;r++){const l=t[r].claim_order,o=(a>0&&t[n[a]].claim_order<=l?a+1:z(1,a,$=>t[n[$]].claim_order,l))-1;i[r]=n[o]+1;const s=o+1;n[s]=r,a=Math.max(s,a)}const u=[],c=[];let f=t.length-1;for(let r=n[a]+1;r!=0;r=i[r-1]){for(u.push(t[r-1]);f>=r;f--)c.push(t[f]);f--}for(;f>=0;f--)c.push(t[f]);u.reverse(),c.sort((r,l)=>r.claim_order-l.claim_order);for(let r=0,l=0;r<c.length;r++){for(;l<u.length&&c[r].claim_order>=u[l].claim_order;)l++;const o=l<u.length?u[l]:null;e.insertBefore(c[r],o)}}function R(e,t){if(b){for(D(e),(e.actual_end_child===void 0||e.actual_end_child!==null&&e.actual_end_child.parentNode!==e)&&(e.actual_end_child=e.firstChild);e.actual_end_child!==null&&e.actual_end_child.claim_order===void 0;)e.actual_end_child=e.actual_end_child.nextSibling;t!==e.actual_end_child?(t.claim_order!==void 0||t.parentNode!==e)&&e.insertBefore(t,e.actual_end_child):e.actual_end_child=t.nextSibling}else(t.parentNode!==e||t.nextSibling!==null)&&e.appendChild(t)}function ce(e,t,n){b&&!n?R(e,t):(t.parentNode!==e||t.nextSibling!=n)&&e.insertBefore(t,n||null)}function U(e){e.parentNode&&e.parentNode.removeChild(e)}function ae(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function V(e){return document.createElement(e)}function S(e){return document.createTextNode(e)}function fe(){return S(" ")}function ue(){return S("")}function se(e,t,n,i){return e.addEventListener(t,n,i),()=>e.removeEventListener(t,n,i)}function oe(e,t,n){n==null?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function de(e){return e.dataset.svelteH}function W(e){return Array.from(e.childNodes)}function F(e){e.claim_info===void 0&&(e.claim_info={last_index:0,total_claimed:0})}function L(e,t,n,i,a=!1){F(e);const u=(()=>{for(let c=e.claim_info.last_index;c<e.length;c++){const f=e[c];if(t(f)){const r=n(f);return r===void 0?e.splice(c,1):e[c]=r,a||(e.claim_info.last_index=c),f}}for(let c=e.claim_info.last_index-1;c>=0;c--){const f=e[c];if(t(f)){const r=n(f);return r===void 0?e.splice(c,1):e[c]=r,a?r===void 0&&e.claim_info.last_index--:e.claim_info.last_index=c,f}}return i()})();return u.claim_order=e.claim_info.total_claimed,e.claim_info.total_claimed+=1,u}function G(e,t,n,i){return L(e,a=>a.nodeName===t,a=>{const u=[];for(let c=0;c<a.attributes.length;c++){const f=a.attributes[c];n[f.name]||u.push(f.name)}u.forEach(c=>a.removeAttribute(c))},()=>i(t))}function _e(e,t,n){return G(e,t,n,V)}function J(e,t){return L(e,n=>n.nodeType===3,n=>{const i=""+t;if(n.data.startsWith(i)){if(n.data.length!==i.length)return n.splitText(i.length)}else n.data=i},()=>S(t),!0)}function he(e){return J(e," ")}function me(e,t){t=""+t,e.data!==t&&(e.data=t)}let A;function p(e){A=e}const h=[],O=[];let m=[];const k=[],K=Promise.resolve();let E=!1;function Q(){E||(E=!0,K.then(T))}function N(e){m.push(e)}const w=new Set;let _=0;function T(){if(_!==0)return;const e=A;do{try{for(;_<h.length;){const t=h[_];_++,p(t),X(t.$$)}}catch(t){throw h.length=0,_=0,t}for(p(null),h.length=0,_=0;O.length;)O.pop()();for(let t=0;t<m.length;t+=1){const n=m[t];w.has(n)||(w.add(n),n())}m.length=0}while(h.length);for(;k.length;)k.pop()();E=!1,w.clear(),p(e)}function X(e){if(e.fragment!==null){e.update(),y(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(N)}}function Y(e){const t=[],n=[];m.forEach(i=>e.indexOf(i)===-1?t.push(i):n.push(i)),n.forEach(i=>i()),m=t}const x=new Set;let d;function pe(){d={r:0,c:[],p:d}}function ye(){d.r||y(d.c),d=d.p}function Z(e,t){e&&e.i&&(x.delete(e),e.i(t))}function $e(e,t,n,i){if(e&&e.o){if(x.has(e))return;x.add(e),d.c.push(()=>{x.delete(e),i&&(n&&e.d(1),i())}),e.o(t)}else i&&i()}function ge(e){e&&e.c()}function xe(e,t){e&&e.l(t)}function ee(e,t,n){const{fragment:i,after_update:a}=e.$$;i&&i.m(t,n),N(()=>{const u=e.$$.on_mount.map(q).filter(I);e.$$.on_destroy?e.$$.on_destroy.push(...u):y(u),e.$$.on_mount=[]}),a.forEach(N)}function te(e,t){const n=e.$$;n.fragment!==null&&(Y(n.after_update),y(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function ne(e,t){e.$$.dirty[0]===-1&&(h.push(e),Q(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function be(e,t,n,i,a,u,c=null,f=[-1]){const r=A;p(e);const l=e.$$={fragment:null,ctx:[],props:u,update:v,not_equal:a,bound:B(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(r?r.$$.context:[])),callbacks:B(),dirty:f,skip_bound:!1,root:t.target||r.$$.root};c&&c(l.root);let o=!1;if(l.ctx=n?n(e,t.props||{},(s,$,...j)=>{const C=j.length?j[0]:$;return l.ctx&&a(l.ctx[s],l.ctx[s]=C)&&(!l.skip_bound&&l.bound[s]&&l.bound[s](C),o&&ne(e,s)),$}):[],l.update(),o=!0,y(l.before_update),l.fragment=i?i(l.ctx):!1,t.target){if(t.hydrate){M();const s=W(t.target);l.fragment&&l.fragment.l(s),s.forEach(U)}else l.fragment&&l.fragment.c();t.intro&&Z(e.$$.fragment),ee(e,t.target,t.anchor),P(),T()}p(r)}class we{$$=void 0;$$set=void 0;$destroy(){te(this,1),this.$destroy=v}$on(t,n){if(!I(n))return v;const i=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return i.push(n),()=>{const a=i.indexOf(n);a!==-1&&i.splice(a,1)}}$set(t){this.$$set&&!H(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const ie="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(ie);export{xe as A,ee as B,te as C,we as S,fe as a,ue as b,_e as c,W as d,V as e,U as f,de as g,he as h,be as i,oe as j,ce as k,R as l,se as m,v as n,J as o,me as p,le as q,Z as r,re as s,S as t,ye as u,$e as v,ae as w,y as x,pe as y,ge as z};
