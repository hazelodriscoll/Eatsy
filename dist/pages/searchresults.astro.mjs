import { c as createComponent, r as renderTemplate, a as renderComponent, m as maybeRenderHead } from '../chunks/astro/server_C5xvivdp.mjs';
import 'kleur/colors';
import 'html-escaper';
import { $ as $$BaseLayout } from '../chunks/BaseLayout_DyjymbOP.mjs';
import { c as create_ssr_component, b as add_attribute, e as escape, s as subscribe, a as each, v as validate_component, w as writable } from '../chunks/index_CvEBcJFH.mjs';
import { s as searchRecipies } from '../chunks/recipieService_CiqzkUG5.mjs';
import '../chunks/store_CgGKH8b8.mjs';
export { renderers } from '../renderers.mjs';

async function fetchSearchResults(query, offset = 0, diet = null) {
  const params = {
    apiKey: "fb571eb0a36b417daee401017d390f99",
    query: query,
    addRecipeInstructions: true,
    addRecipeNutrition: true,
    number: "9",
    offset: offset,
  };

  if (diet) {
    params.diet = diet;
  }

  try {
    const response = await searchRecipies(params);
    return response;
  } catch (err) {
    console.error("Failed to fetch search results:", err);
    throw new Error("Failed to fetch search results.");
  }
}

/* C:/Users/Hazel/Documents/Project/Eatsy/src/components/SearchResultsCard.svelte generated by Svelte v4.2.18 */

const SearchResultsCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { recipie } = $$props;

	if ($$props.recipie === void 0 && $$bindings.recipie && recipie !== void 0) $$bindings.recipie(recipie);
	return `<div class="col"><div class="card"><img${add_attribute("src", recipie.image, 0)} class="card-img-top sr-custom-rounded"${add_attribute("alt", recipie.title, 0)}> <div class="card-body"><h5 class="card-title">${escape(recipie.title)}</h5> <div class="sr-recipe-details"><div class="sr-detail-item"><img src="/Eatsy/images/time-icon.png" alt="Time" class="sr-detail-icon"> <span class="sr-detail-name" data-svelte-h="svelte-6ivwmf">Total Time:</span> <span>${escape(recipie.readyInMinutes)} mins</span></div> <div class="sr-detail-item"><img src="/Eatsy/images/servings-icon.png" alt="Servings" class="sr-detail-icon"> <span class="sr-detail-name" data-svelte-h="svelte-1bdf15t">Servings:</span> <span class="sr-detail-info">${escape(recipie.servings)}</span></div> <div class="sr-detail-item"><img src="/Eatsy/images/recipie-by-icon.png" alt="Recipe by" class="sr-detail-icon"> <span class="sr-detail-name" data-svelte-h="svelte-1m28vzp">Recipe by:</span> <a${add_attribute("href", recipie.spoonacularSourceUrl, 0)} target="_blank" class="sr-detail-info">${escape(recipie.sourceName)}</a></div> <button class="btn btn-primary" data-svelte-h="svelte-1fuww6">View Full Recipie</button></div></div></div></div>`;
});

/* C:/Users/Hazel/Documents/Project/Eatsy/src/components/SearchResult.svelte generated by Svelte v4.2.18 */
const resultsPerPage = 9;

const SearchResult = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $selectedDiet, $$unsubscribe_selectedDiet;
	let $currentPage, $$unsubscribe_currentPage;
	let $query, $$unsubscribe_query;
	let $loading, $$unsubscribe_loading;
	let $error, $$unsubscribe_error;
	let $searchResults, $$unsubscribe_searchResults;
	let $totalResults, $$unsubscribe_totalResults;
	let searchResults = writable([]);
	$$unsubscribe_searchResults = subscribe(searchResults, value => $searchResults = value);
	let query = writable("");
	$$unsubscribe_query = subscribe(query, value => $query = value);
	let loading = writable(false);
	$$unsubscribe_loading = subscribe(loading, value => $loading = value);
	let error = writable("");
	$$unsubscribe_error = subscribe(error, value => $error = value);
	let currentPage = writable(1);
	$$unsubscribe_currentPage = subscribe(currentPage, value => $currentPage = value);
	let totalResults = writable(0);
	$$unsubscribe_totalResults = subscribe(totalResults, value => $totalResults = value);
	let selectedDiet = writable([]);
	$$unsubscribe_selectedDiet = subscribe(selectedDiet, value => $selectedDiet = value);

	async function fetchResults(queryValue, offset, diet) {
		loading.set(true);
		error.set("");

		try {
			const response = await fetchSearchResults(queryValue, offset, diet);
			searchResults.set(response.results);
			totalResults.set(response.totalResults); // Assuming the API response has a 'totalResults' field
		} catch(err) {
			error.set("Failed to fetch search results.");
			searchResults.set([]);
		} finally {
			loading.set(false);
		}
	}

	{
		if ($query) {
			fetchResults($query, ($currentPage - 1) * resultsPerPage, $selectedDiet);
		}
	}

	$$unsubscribe_selectedDiet();
	$$unsubscribe_currentPage();
	$$unsubscribe_query();
	$$unsubscribe_loading();
	$$unsubscribe_error();
	$$unsubscribe_searchResults();
	$$unsubscribe_totalResults();

	return `<div class="container-fluid container-background"><form class="d-flex flex-column align-items-end" id="searchForm"><div class="d-flex mb-3 w-100"><input class="form-control me-2" type="text" id="searchQuery" placeholder="Search recipes..."${add_attribute("value", $query, 0)}> <button class="btn btn-primary" type="submit" data-svelte-h="svelte-1fsppor">Search</button></div> <div id="dietFilter" class="d-flex flex-wrap justify-content-start"><div class="form-check form-check-inline"><input class="form-check-input" type="checkbox" id="vegetarianCheckbox" value="vegetarian"> <label class="form-check-label" for="vegetarianCheckbox" data-svelte-h="svelte-1x0trca">Vegetarian</label></div> <div class="form-check form-check-inline"><input class="form-check-input" type="checkbox" id="pescetarianCheckbox" value="pescetarian"> <label class="form-check-label" for="pescetarianCheckbox" data-svelte-h="svelte-1aslwyo">Pescetarian</label></div> <div class="form-check form-check-inline"><input class="form-check-input" type="checkbox" id="veganCheckbox" value="vegan"> <label class="form-check-label" for="veganCheckbox" data-svelte-h="svelte-1lmcfn8">Vegan</label></div> <div class="form-check form-check-inline"><input class="form-check-input" type="checkbox" id="glutenFreeCheckbox" value="gluten free"> <label class="form-check-label" for="glutenFreeCheckbox" data-svelte-h="svelte-1uqssi8">Gluten Free</label></div> <div class="form-check form-check-inline"><input class="form-check-input" type="checkbox" id="dairyFreeCheckbox" value="dairy free"> <label class="form-check-label" for="dairyFreeCheckbox" data-svelte-h="svelte-w0ymo">Dairy Free</label></div></div></form> <div class="container">${$loading
	? `<p data-svelte-h="svelte-qdsr2u">Loading...</p>`
	: `${$error
		? `<p>${escape($error)}</p>`
		: `<div class="card-group row row-cols-1 row-cols-md-3 g-4">${each($searchResults, result => {
				return `${validate_component(SearchResultsCard, "SearchResultsCard").$$render($$result, { recipie: result }, {}, {})}`;
			})}</div> <div class="pagination-controls d-flex justify-content-between align-items-center mt-4"><button class="btn btn-primary" ${$currentPage === 1 ? "disabled" : ""}>Previous</button> <span>Page ${escape($currentPage)} of ${escape(Math.ceil($totalResults / resultsPerPage))}</span> <button class="btn btn-primary" ${$currentPage === Math.ceil($totalResults / resultsPerPage)
			? "disabled"
			: ""}>Next</button></div>`}`}</div></div>`;
});

const $$SearchResults = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "BaseLayout", $$BaseLayout, {}, { "main": ($$result2) => renderTemplate`${maybeRenderHead()}<div class="container mt-5"> <h3 class="display-4">Search Results</h3> ${renderComponent($$result2, "SearchResult", SearchResult, { "client:load": true, "client:component-hydration": "load", "client:component-path": "C:/Users/Hazel/Documents/Project/Eatsy/src/components/SearchResult.svelte", "client:component-export": "default" })} </div>` })}`;
}, "C:/Users/Hazel/Documents/Project/Eatsy/src/pages/searchResults.astro", void 0);

const $$file = "C:/Users/Hazel/Documents/Project/Eatsy/src/pages/searchResults.astro";
const $$url = "/Eatsy/searchResults";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$SearchResults,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
